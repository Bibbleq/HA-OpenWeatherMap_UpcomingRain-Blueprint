blueprint:
  name: Rain Within Hour (OpenWeatherMap → Helpers)
  description: |
    Monitor minute-by-minute weather forecast and update helper entities with rain predictions.
    
    This blueprint polls OpenWeatherMap for minute-level precipitation forecasts and updates
    helper entities with information about upcoming rain, including:
    - Whether rain is expected within the hour
    - Minutes until rain starts
    - Maximum precipitation rate
    - Rain intensity classification (None, Light, Moderate, Heavy, Violent)
    
    **Requirements:**
    - Home Assistant 2024.2 or later
    - OpenWeatherMap integration with OneCall API configured
    
    **Required Helpers:**
    - Input Boolean: Rain within hour status
    - Input Number: Minutes until rain (0-60)
    - Input Number: Max mm/hr within hour (0-200)
    - Input Select: Rain intensity with options: None, Light, Moderate, Heavy, Violent
  domain: automation
  source_url: https://github.com/Bibbleq/HA-OpenWeatherMap_UpcomingRain-Blueprint/blob/main/openweathermap_rain_in_next_hour.yaml
  
  input:
    weather_entity:
      name: OpenWeatherMap Weather Entity
      description: The OpenWeatherMap weather entity that provides minute forecast data (e.g., weather.openweathermap)
      selector:
        entity:
          domain: weather
          integration: openweathermap
    
    poll_interval:
      name: Poll Interval Pattern
      description: Time pattern for how often to check (e.g., "/10" for every 10 minutes, "/5" for every 5 minutes)
      default: "/10"
      selector:
        text:
    
    rain_threshold:
      name: Rain Threshold (mm/min)
      description: Minimum precipitation rate to consider as rain (default 0.05 mm/min)
      default: 0.05
      selector:
        number:
          min: 0.01
          max: 1.0
          step: 0.01
          unit_of_measurement: mm/min
    
    boolean_rain_within_hour:
      name: Input Boolean - Rain Within Hour
      description: Helper entity to indicate if rain is expected within the hour
      selector:
        entity:
          domain: input_boolean
    
    number_minutes_until_rain:
      name: Input Number - Minutes Until Rain
      description: Helper entity to store minutes until rain starts (0-60)
      selector:
        entity:
          domain: input_number
    
    number_max_mm_within_hour:
      name: Input Number - Max mm/hr Within Hour
      description: Helper entity to store maximum precipitation rate in mm/hr
      selector:
        entity:
          domain: input_number
    
    select_rain_intensity:
      name: Input Select - Rain Intensity
      description: Helper entity to store rain intensity classification (None, Light, Moderate, Heavy, Violent)
      selector:
        entity:
          domain: input_select

alias: Rain within hour (OpenWeatherMap → helpers)
triggers:
  - trigger: time_pattern
    minutes: !input poll_interval

actions:
  - action: openweathermap.get_minute_forecast
    target:
      entity_id: !input weather_entity
    data: {}
    response_variable: Minute_Weather

  - variables:
      weather_entity_id: !input weather_entity
      rain_threshold: !input rain_threshold
      max_mm_per_hr: >
        {{ (Minute_Weather[weather_entity_id]['forecast'] | map(attribute='precipitation', default=0) | map('float') | max) | float(0) }}
      total_mm_next_hour: >
        {{ (Minute_Weather[weather_entity_id]['forecast'] | map(attribute='precipitation', default=0) | map('float') | sum) | float(0) | round(2) }}
      rain_soon: >
        {{ (Minute_Weather[weather_entity_id]['forecast'] | map(attribute='precipitation', default=0) | map('float') | select('>', rain_threshold) | list | length) > 0 }}
      minutes_until_rain: >
        {% set forecast = Minute_Weather[weather_entity_id]['forecast'] %}
        {% set ns = namespace(idx=None) %}
        {% for item in forecast %}
          {% if ns.idx is none and (item.precipitation | float(0)) > rain_threshold %}
            {% set ns.idx = loop.index0 %}
          {% endif %}
        {% endfor %}
        {{ ns.idx }}
      rain_intensity: >
        {% set r = max_mm_per_hr | float(0) %}
        {% if not rain_soon or r < 0.1 %}
          None
        {% elif r < 2.5 %}
          Light
        {% elif r < 10 %}
          Moderate
        {% elif r < 50 %}
          Heavy
        {% else %}
          Violent
        {% endif %}

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ rain_soon }}"
        sequence:
          - action: input_boolean.turn_on
            target:
              entity_id: !input boolean_rain_within_hour
          - action: input_number.set_value
            target:
              entity_id: !input number_minutes_until_rain
            data:
              value: "{{ (minutes_until_rain | default(0)) | int(0) }}"
          - action: input_number.set_value
            target:
              entity_id: !input number_max_mm_within_hour
            data:
              value: "{{ (max_mm_per_hr | float(0)) | round(1) }}"
          - action: input_select.select_option
            target:
              entity_id: !input select_rain_intensity
            data:
              option: "{{ rain_intensity }}"
    default:
      - action: input_boolean.turn_off
        target:
          entity_id: !input boolean_rain_within_hour
      - action: input_number.set_value
        target:
          entity_id: !input number_minutes_until_rain
        data:
          value: 0
      - action: input_number.set_value
        target:
          entity_id: !input number_max_mm_within_hour
        data:
          value: 0
      - action: input_select.select_option
        target:
          entity_id: !input select_rain_intensity
        data:
          option: None

mode: single
